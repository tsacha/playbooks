server {
  listen 80;
  listen [::]:80;
  server_name cloud.mkfs.fr cloud.mkfs.be;

  client_max_body_size 10G;
  fastcgi_buffers 64 4K;

  gzip off;

  root /srv/http/cloud/nextcloud;
  index index.php;
  error_page 403 /core/templates/403.php;
  error_page 404 /core/templates/404.php;

  rewrite ^/.well-known/carddav /remote.php/dav/ permanent;
  rewrite ^/.well-known/caldav /remote.php/dav/ permanent;

  location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
  }

  location ~ ^/(build|tests|config|lib|3rdparty|templates|data)/ {
    deny all;
  }

  location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) {
    deny all;
  }

  location / {
    rewrite ^/remote/(.*) /remote.php last;
    rewrite ^(/core/doc/[^\/]+/)$ $1/index.html;
    try_files $uri $uri/ =404;
  }


  location ~ \.php(?:$|/) {
#     fastcgi_cache fcgicache;
#     fastcgi_cache_valid 200 60m; # Only cache 200 responses, cache for 60 minutes
#     fastcgi_cache_methods GET HEAD; # Only GET and HEAD methods apply
    add_header X-Fastcgi-Cache $upstream_cache_status;
    include fastcgi.conf;
    
    fastcgi_pass unix:/run/php-fpm/php-fpm.sock;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
    fastcgi_param modHeadersAvailable true; #Avoid sending the security headers twice
    fastcgi_intercept_errors on;
  }

  # Adding the cache control header for js and css files
  # Make sure it is BELOW the location ~ \.php(?:$|/) { block
  location ~* \.(?:css|js)$ {
    # Optional: Don't log access to assets
    access_log off;
  }

  # Optional: Don't log access to other assets
  location ~* \.(?:jpg|jpeg|gif|bmp|ico|png|svg)$ {
    access_log off;
    expires 7d;
  }
}